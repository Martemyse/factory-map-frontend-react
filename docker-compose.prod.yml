version: '3.8'

services:
  # Backend API
  react_app_factory_map_backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: React_App_Factory_Map_Backend
    environment:
      - DEV_MODE=false
      - PG_HOST=postgres_c
      - PG_USER=postgres
      - PG_PASSWORD=martinmi
      - PG_DB=layout_proizvodnja_libre_konva
    ports:
      - "7998:7998"
    networks:
      - postgres_network
    restart: unless-stopped
    volumes:
      - ./data:/app/data:ro  # Mount data directory if needed
      - /app/__pycache__  # Anonymous volume to preserve Python cache

  # Frontend
  react_app_factory_map_frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: React_App_Factory_Map_Frontend
    ports:
      - "8077:8077"
    networks:
      - postgres_network
    restart: unless-stopped

  # Tile Server (if needed)
  tileserver:
    image: maptiler/tileserver-gl
    container_name: factory_tileserver
    volumes:
      - ./infra/1_tippecanoe_tileserver/data:/data
    ports:
      - "7999:80"
    command: >
      tileserver-gl --port 80 --mbtiles /data/LTH_factory.mbtiles
    networks:
      - postgres_network
    restart: unless-stopped
    # healthcheck:
    #   test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

networks:
  postgres_network:
    driver: bridge
